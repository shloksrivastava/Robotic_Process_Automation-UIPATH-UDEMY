<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="filelist" />
      <Variable x:TypeArguments="ui:GenericValue" Name="varProductName" />
      <Variable x:TypeArguments="ui:GenericValue" Name="varCompanyName" />
      <Variable x:TypeArguments="ui:GenericValue" Name="varModName" />
      <Variable x:TypeArguments="ui:GenericValue" Name="varAddress" />
      <Variable x:TypeArguments="ui:GenericValue" Name="varTestDate" />
      <Variable x:TypeArguments="ui:GenericValue" Name="varDOP" />
      <Variable x:TypeArguments="ui:GenericValue" Name="varReportNumber" />
    </Sequence.Variables>
    <Assign DisplayName="Get Files from Folder" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[filelist]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[directory.GetFiles("ScannedDocuments","*.pdf")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each pdf in filelist" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[filelist]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="pdf" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="[pdf.ToString]" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
            <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Open Zoom Window" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="y" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="7a6655b7a85a423384b709fd5f1f600e" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Zoom Window" sap2010:WorkflowViewState.IdRef="WindowScope_5" InformativeScreenshot="7c79269069535a57539de30b4904751e" Selector="&lt;wnd app='acrord32.exe' cls='#32770' title='Zoom To' /&gt;">
              <ui:WindowScope.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Zoom Percentage" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_2" SendWindowMessages="False" SimulateType="False" Text="50">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="7f4011606af664841be9e55dd3e2462b" Selector="&lt;wnd aaname='Magnification:' cls='ComboBoxEx32' /&gt;&lt;wnd aaname='Magnification:' cls='ComboBox' /&gt;&lt;wnd aaname='Magnification:' cls='Edit' /&gt;" WaitForReady="INTERACTIVE" />
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Click Enter" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="enter" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                  </Sequence>
                </ActivityAction>
              </ui:WindowScope.Body>
            </ui:WindowScope>
            <Sequence DisplayName="Screen Scraping" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach to PDF" sap2010:WorkflowViewState.IdRef="WindowScope_7" InformativeScreenshot="53c2bf526e54d58a224df7006888a1b6" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get Product Name" sap2010:WorkflowViewState.IdRef="GetOCRText_6">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Text="{x:Null}" AllowedCharacters="" DeniedCharacters="" DisplayName="GoogleOCR" ExtractWords="False" sap2010:WorkflowViewState.IdRef="GoogleOCR_6" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ddd637d8314047c06df0d1ce305291f6" Selector="&lt;wnd cls='AVL_AVView' idx='2' title='AVSplitterView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrollView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;" WaitForReady="INTERACTIVE">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="376, 216, 329, 16" />
                            </ui:Target.ClippingRegion>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[varProductName]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get Company Name" sap2010:WorkflowViewState.IdRef="GetOCRText_7">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Text="{x:Null}" AllowedCharacters="" DeniedCharacters="" ExtractWords="False" sap2010:WorkflowViewState.IdRef="GoogleOCR_7" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="02895cd36ee3a03111c64c6b46ce20c4" Selector="&lt;wnd cls='AVL_AVView' idx='2' title='AVSplitterView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrollView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;" WaitForReady="INTERACTIVE">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="374, 305, 330, 19" />
                            </ui:Target.ClippingRegion>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[varCompanyName]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get Model Name" sap2010:WorkflowViewState.IdRef="GetOCRText_8">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Text="{x:Null}" AllowedCharacters="" DeniedCharacters="" ExtractWords="False" sap2010:WorkflowViewState.IdRef="GoogleOCR_8" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="1" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="f93c7684649439698b7802f365b50af2" Selector="&lt;wnd cls='AVL_AVView' idx='2' title='AVSplitterView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrollView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;" WaitForReady="INTERACTIVE">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="375, 272, 113, 20" />
                            </ui:Target.ClippingRegion>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[varModName]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get Address" sap2010:WorkflowViewState.IdRef="GetOCRText_9">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Text="{x:Null}" AllowedCharacters="" DeniedCharacters="" ExtractWords="False" sap2010:WorkflowViewState.IdRef="GoogleOCR_9" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="af2015913b9120d67e26ff63454b7d2c" Selector="&lt;wnd cls='AVL_AVView' idx='2' title='AVSplitterView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrollView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;" WaitForReady="INTERACTIVE">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="374, 336, 317, 18" />
                            </ui:Target.ClippingRegion>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[varAddress]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get Test Date" sap2010:WorkflowViewState.IdRef="GetOCRText_10">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Text="{x:Null}" AllowedCharacters="" DeniedCharacters="" ExtractWords="False" sap2010:WorkflowViewState.IdRef="GoogleOCR_10" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="9d1d7653f944e4887140c0ea19b36352" Selector="&lt;wnd cls='AVL_AVView' idx='2' title='AVSplitterView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrollView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;" WaitForReady="INTERACTIVE">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="374, 424, 208, 20" />
                            </ui:Target.ClippingRegion>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[varTestDate]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get DOP" sap2010:WorkflowViewState.IdRef="GetOCRText_11">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Text="{x:Null}" AllowedCharacters="" DeniedCharacters="" ExtractWords="False" sap2010:WorkflowViewState.IdRef="GoogleOCR_11" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1a47fcbef16e8858ddf67a3f94d84a3e" Selector="&lt;wnd cls='AVL_AVView' idx='2' title='AVSplitterView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrollView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;" WaitForReady="INTERACTIVE">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="375, 458, 93, 17" />
                            </ui:Target.ClippingRegion>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[varDOP]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get Report Number" sap2010:WorkflowViewState.IdRef="GetOCRText_12">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Text="{x:Null}" AllowedCharacters="" DeniedCharacters="" ExtractWords="False" sap2010:WorkflowViewState.IdRef="GoogleOCR_12" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="8410ecb25f8dedd335b35d17d61e6f8c" Selector="&lt;wnd cls='AVL_AVView' idx='2' title='AVSplitterView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVScrollView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;" WaitForReady="INTERACTIVE">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="375, 484, 98, 22" />
                            </ui:Target.ClippingRegion>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[varReportNumber]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Successfully scraped &quot;+pdf.ToString]" />
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[&quot;Scraped Data&quot; + vbCR + &#xD;&#xA;vbCR +&#xD;&#xA;&quot;Product Name: &quot; + varProductName + vbCR +&#xD;&#xA;&quot;Model Name: &quot; + varModName  + vbCR +&#xD;&#xA;&quot;Company Name: &quot; + varCompanyName + vbCR +&#xD;&#xA;&quot;Company Address: &quot; + varAddress  + vbCR +&#xD;&#xA;&quot;DOP: &quot; + varDOP  + vbCR +&#xD;&#xA;&quot;Test Date: &quot; + varTestDate  + vbCR +&#xD;&#xA;&quot;Report Number: &quot; + varReportNumber]" TopMost="True" />
            <ui:AppendLine DisplayName="Append Line" FileName="scrapedData.txt" Text="[&quot;Scraped Data from &quot; + pdf.ToString +  vbCR + &#xD;&#xA;vbCR +&#xD;&#xA;&quot;Product Name: &quot; + varProductName + vbCR +&#xD;&#xA;&quot;Model Name: &quot; + varModName  + vbCR +&#xD;&#xA;&quot;Company Name: &quot; + varCompanyName + vbCR +&#xD;&#xA;&quot;Company Address: &quot; + varAddress  + vbCR +&#xD;&#xA;&quot;DOP: &quot; + varDOP  + vbCR +&#xD;&#xA;&quot;Test Date: &quot; + varTestDate  + vbCR +&#xD;&#xA;&quot;Report Number: &quot; + varReportNumber]" sap2010:WorkflowViewState.IdRef="AppendLine_1" />
            <ui:CloseApplication DisplayName="Close PDF" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
              <ui:CloseApplication.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="2ba0c0455cc36f620927ccd84d8c9490" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:CloseApplication.Target>
            </ui:CloseApplication>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <sads:DebugSymbol.Symbol>dyxEOlxSb2JvdHNcUm9ib3Q2X1NjcmVlblNjcmFwaW5nT0NSXE1haW4ueGFtbFJBA5wCDgIBAUwFUw4CAWFUBZoCEgIBAlEyUWICAWROM049AgFiVKABVKwBAgFfWguXAhYCAQNbDVu4AQIBXFwNYB0CAVlhDXUeAgFRdg2PAhgCAQuQAg2QAvsEAgEJkQINkQLlBAIBBpICDZYCIwIBBFt0W4QBAgFdXqABXoECAgFbXPEBXPQBAgFaYYQCYcMCAgFYZxNyHgIBUncPjgIgAgEMkAKiAZAC6QQCAQqRAlaRArMEAgEIkQI/kQJQAgEHlAKgAZQCgQICAQVoFWwjAgFVbRVxJQIBU3eIAnfpAgIBUH0ViwIgAgENaqgBasYCAgFXaKoCaK4CAgFWbfQBbfsBAgFUfheRAScCAUeSARelAScCAT6mARe5AScCATW6ARfNAScCASzOARfhAScCASPiARf1AScCARr2AReJAicCARGKAheKArkBAgEOiAGQAYgB7AICAU+PAUqPAVoCAU2EAR2EAaICAgFInAGQAZwB7AICAUajAUqjAVoCAUSYAR2YAYoCAgE/sAGQAbAB7AICAT23AUq3AVYCATusAR2sAYoCAgE2xAGQAcQB7AICATTLAUrLAVYCATLAAR3AAYoCAgEt2AGQAdgB7AICASvfAUrfAVcCASnUAR3UAYsCAgEk7AGQAewB7AICASLzAUrzAVICASDoAR3oAYsCAgEbgAKQAYAC7AICARmHAkqHAlsCARf8AR38AYsCAgESigKEAYoCtgECAQ+EAZwChAGfAgIBTIQB3QGEAeYBAgFKhAH/AYQBhAICAUmYAYQCmAGHAgIBQ5gBxQGYAc4BAgFBmAHnAZgB7AECAUCsAYQCrAGHAgIBOqwBxQGsAc4BAgE4rAHnAawB7AECATfAAYQCwAGHAgIBMcABxQHAAc4BAgEvwAHnAcAB7AECAS7UAYUC1AGIAgIBKNQBxgHUAc8BAgEm1AHoAdQB7QECASXoAYUC6AGIAgIBH+gBxgHoAc8BAgEd6AHoAegB7QECARz8AYUC/AGIAgIBFvwBxgH8Ac8BAgEU/AHoAfwB7QECARM=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="474.666666666667,62" />
      <sap2010:ViewStateData Id="StartProcess_1" sap:VirtualizedContainerService.HintSize="436,86.6666666666667" />
      <sap2010:ViewStateData Id="SendHotkey_3" sap:VirtualizedContainerService.HintSize="436,155.333333333333" />
      <sap2010:ViewStateData Id="TypeInto_2" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="SendHotkey_4" sap:VirtualizedContainerService.HintSize="314,117.333333333333" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,415.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_5" sap:VirtualizedContainerService.HintSize="436,561.333333333333" />
      <sap2010:ViewStateData Id="GoogleOCR_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetOCRText_6" sap:VirtualizedContainerService.HintSize="314,168" />
      <sap2010:ViewStateData Id="GoogleOCR_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetOCRText_7" sap:VirtualizedContainerService.HintSize="314,168" />
      <sap2010:ViewStateData Id="GoogleOCR_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetOCRText_8" sap:VirtualizedContainerService.HintSize="314,168" />
      <sap2010:ViewStateData Id="GoogleOCR_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetOCRText_9" sap:VirtualizedContainerService.HintSize="314,168" />
      <sap2010:ViewStateData Id="GoogleOCR_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetOCRText_10" sap:VirtualizedContainerService.HintSize="314,168" />
      <sap2010:ViewStateData Id="GoogleOCR_11" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetOCRText_11" sap:VirtualizedContainerService.HintSize="314,168" />
      <sap2010:ViewStateData Id="GoogleOCR_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetOCRText_12" sap:VirtualizedContainerService.HintSize="314,168" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,94.6666666666667" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="336,1674.66666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_7" sap:VirtualizedContainerService.HintSize="414,1820.66666666667" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="436,1944.66666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MessageBox_4" sap:VirtualizedContainerService.HintSize="436,58.6666666666667" />
      <sap2010:ViewStateData Id="AppendLine_1" sap:VirtualizedContainerService.HintSize="436,86.6666666666667" />
      <sap2010:ViewStateData Id="CloseApplication_1" sap:VirtualizedContainerService.HintSize="436,106" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="458,3363.33333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="474.666666666667,3502" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="496.666666666667,3728">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="536.666666666667,3848" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>